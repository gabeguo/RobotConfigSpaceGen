name: Run all demos
run-name: ${{ github.actor }} is running
on: [push]
jobs:
  C:
    runs-on: ubuntu-latest
    container: mmontanari/devenv:buildenv-fedora
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: cmake -E make_directory build
      - run: cmake -E chdir build cmake -DCMAKE_BUILD_TYPE=Release ..
      - run: cmake --build build
      - run: cmake -E chdir build/examples/c/ ./example_lib_opengjk_ce

  Cython:
    runs-on: ubuntu-latest
    container: mmontanari/devenv:buildenv-ubuntu
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: cd examples/cython/ && python3 setup.py build_ext --inplace && python3 pygjk_trial.py
      - run: cd examples/cython/ && pytest test.py

  CSharp:
    runs-on: ubuntu-latest
    container: mono:latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: apt-get update && apt-get install gcc cmake -y
      - run: cmake -E make_directory build
      # Using single precision
      - run: cmake -E chdir build cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_MONO=ON -DSINGLE_PRECISION=ON ..
      - run: cmake --build build --target opengjk_ce
      - run: cmake -E chdir build make install
      - run: cd examples/cs/ && mcs -out:main.exe main.cs && mono main.exe

  GO:
    runs-on: ubuntu-latest
    container: mmontanari/devenv:buildenv-fedora
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.15
      - run: cd examples/go/openGJK && go build && go test -v

  Octave:
    runs-on: ubuntu-latest
    container: gnuoctave/octave:7.3.0
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: cd examples/matlab/; octave runme.m
